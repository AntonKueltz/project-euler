def euler45():
	"""
	Triangle, pentagonal, and hexagonal numbers are generated by the following
	formulae:

	Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
	Pentagonal	 	Pn=n(3n-1)/2	 	1, 5, 12, 22, 35, ...
	Hexagonal	 	Hn=n(2n-1)	 	1, 6, 15, 28, 45, ...
	
	It can be verified that T285 = P165 = H143 = 40755.

	Find the next triangle number that is also pentagonal and hexagonal.
	"""
	seed = 286
	gen_tri = lambda n: int((n * (n + 1)) / 2)
	valid_pent = lambda x: ((24 * x + 1)**0.5) % 6 == 5
	valid_hex = lambda x: ((8 * x + 1)**0.5 + 1) / 4.0 == \
	                      int(((8 * x + 1)**0.5 + 1) / 4.0) 
	
	while True:
		tri = gen_tri(seed)
		if valid_pent(tri) and valid_hex(tri): return tri
		seed += 1
		
if __name__ == "__main__":
	print euler45()
	
	
